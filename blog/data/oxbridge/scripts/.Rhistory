offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" ) { #application is 0 but offer above 0, makes no sense, swap places
print("aa");
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
a
a = ""
a
as.integer(a)
is.na(a)
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2023.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2023.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ){ #application is 0 but offer above 0, makes no sense, swap places
print("aa");
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2023.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2023.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2022.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2022.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2021.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2021.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2020.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2020.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2019.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2019.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline() is problematic and error-prone, so safer to input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/cambridge_2022.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/cambridge_2022.csv";
str <- pdf_text(filepath); #pdf function to read the whole pdf file contents into a string
ucas_regex <- "[0-9]{5}"; #exactly 5 digits for school's UCAS ID
line_regex <- paste(ucas_regex, ".+?\\n", sep=""); #regex to identify each line starting from UCAS ID to newspace
postcode_regex <- "[A-Z]{1,2}[0-9]{1,2}[A-Z]{0,1}\\s[0-9]{1}[A-Z]{1,2}"; #UK post code formats
name_regex <- paste(ucas_regex, "\\s{2,}", "(.+?)", "\\s{2,}", postcode_regex, sep=""); #anything between UCAS ID and postcode
other_regex <- paste(postcode_regex, "\\s+" , "(.+?)", "\\s{2,}" , "(.+?)",  "\\s{2,}", "(.+?)" , "\\s", sep=""); #whatever coming after postcode
lines <- str_extract_all(str, line_regex); #extracting lines from the read string
lines <- unlist(lines); #into a vector
#list variables for storing relevant info
ucasNumbers <- list();
names <- list();
postcodes <- list();
statuses <- list();
applications <- list();
offers <- list();
#reading line by line
for (i in 1:length(lines)) {
line <- lines[i] #current line
if ( !grepl("Other and Overseas", line) ) { #not containing the Overseas token in this line
ucasNumber <- str_extract(line, ucas_regex);  #grab ucas from line
ucasNumbers <- append(ucasNumbers, ucasNumber);
postcode <- str_extract(line, postcode_regex); #grab postcode from line, any UK school must have a postcode
postcodes <- append(postcodes, postcode);
name <- str_match(line, name_regex)[,2]; #from name
names <- append(names, name);
other <- str_match(line, other_regex);
status <- other[,2];
application <- other[,3];
offer <- other[,4];
#cambridge shows number below 3 using <3 while oxford leaves it empty, convert to empty here
if (application == "<3") {
application <- "";
}
if (offer == "<3") {
offer <- "";
}
statuses <- append(statuses, status);
applications <- append(applications, application);
offers <- append(offers, offer);
}
}
application
hello
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2023.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2023.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
if (application == "") {
application <- "<3";
}
if (offer == "") {
offer <- "<3";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2022.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2022.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
if (application == "") {
application <- "<3";
}
if (offer == "") {
offer <- "<3";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2021.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2021.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
if (application == "") {
application <- "<3";
}
if (offer == "") {
offer <- "<3";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2020.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2020.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
if (application == "") {
application <- "<3";
}
if (offer == "") {
offer <- "<3";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
library(stringr);
library(pdftools);
#INPUT the input filepath and output filepath here, R's readline is problematic, so better hand input them here instead of asking user
filepath <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/raw/oxford_2019.pdf";
out <- "/Users/houghtonstreet/Dropbox/Lime Street/limestreetlab.github.io/blog/data/oxbridge/extracted/oxford_2019.csv";
str <- pdf_text(filepath);
line_regex <- "[0-9]{5}\\s{2,}.+?\\n";
regex <- "([0-9]{5})\\s{2,}(\\D+)((?<!-)\\d*)(\\s+\\d*)";
lines <- str_extract_all(str, line_regex);
lines <- unlist(lines);
ucasNumbers <- list();
names <- list();
applications <- list();
offers <- list();
for (i in 1:length(lines)) {
line <- lines[i]
matches <- str_match(line, regex);
ucasNumber <- matches[,2];
name <- trimws( matches[,3] );
application <- trimws( matches[,4] );
offer <- trimws( matches[,5] );
#chunk to check if extracted applications number is indeed above offer number, sometimes when only application number exists (offer <3 = ""), it can show erroneously as offer number instead
if ( application == "" & offer != "" & as.integer(offer) > 0 ) { #application is 0 but offer above 0, makes no sense, swap places
application <- offer;
offer <- "";
}
if (application == "") {
application <- "<3";
}
if (offer == "") {
offer <- "<3";
}
ucasNumbers <- append(ucasNumbers, ucasNumber);
names <- append(names, name);
applications <- append(applications, application);
offers <- append(offers, offer);
}
ucas <- unlist(ucasNumbers);
name <- unlist(names);
application <- unlist(applications);
offer <- unlist(offers);
df <- data.frame(ucas, name, application, offer);
write.csv(df, out, row.names=FALSE);
